/*
 * Signature Pad v4.1.7 | https://github.com/szimek/signature_pad
 * (c) 2023 Szymon Nowak | Released under the MIT license
 */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).SignaturePad=e()}(this,(function(){"use strict";class t{constructor(t,e,i,n){this.startPoint=t,this.control1=e,this.control2=i,this.endPoint=n}static fromPoints(e,i){const n=.25*i;return new t(e[0],{x:e[0].x+n,y:e[0].y+n},{x:e[1].x-n,y:e[1].y-n},e[1])}}class e{constructor(){this.clear()}addPoint(t){return this.points.push(t),this._lastControlPoint=t,t}clear(){this.points=[],this._lastControlPoint=null}removeLastPoint(){return this.points.pop()}getLastControlPoint(){return this._lastControlPoint}pointsCount(){return this.points.length}}function i(t){const e=t.getBoundingClientRect();return{x:t.clientX-e.left,y:t.clientY-e.top}}function n(t){return{x:t.touches[0].clientX,y:t.touches[0].clientY}}function o(t,e){const i=document.createElement("canvas");return i.setAttribute("width",t.toString()),i.setAttribute("height",e.toString()),i}function s(t){const e=t.getContext("2d");if(!e)throw new Error("Cannot initialize context 2D");return e}function h(t,e=[]){const i=t.getContext("2d");if(!i)throw new Error("Cannot initialize context 2D");return i.clearRect(0,0,t.width,t.height),i.setTransform(1,0,0,1,0,0),e.forEach((({color:t,thickness:e,paths:n})=>{n.forEach((n=>{if(0===n.length)return;i.beginPath(),i.strokeStyle=t,i.lineWidth=e,i.lineCap="round",i.lineJoin="round",i.moveTo(n[0].x,n[0].y);for(let t=1;t<n.length;t++){const e=n[t-1],o=n[t],s=t=>({point:t,time:Date.now(),color:i.strokeStyle,thickness:i.lineWidth});if(e&&o){const t=s(e),i=s(o);new r(t,i).draw()}}i.closePath(),i.stroke()}))})),t}class r{constructor(t,e){this.start=t,this.end=e}private static addCurve(t,e){t.beginPath(),t.moveTo(e.startPoint.x,e.startPoint.y),t.bezierCurveTo(e.control1.x,e.control1.y,e.control2.x,e.control2.y,e.endPoint.x,e.endPoint.y),t.stroke(),t.closePath()}draw(){if(!this.end)return;const e=this.drawStroke(),{color:i,thickness:n}=this.start,o=e.getContext("2d");if(!o)throw new Error("Cannot initialize context 2D");o.strokeStyle=i,o.lineWidth=n,o.lineCap="round",o.lineJoin="round";const s=this.getCurvePoints();return r.addCurve(o,new t(s[0],s[1],s[2],s[3])),e}private drawStroke(){const t=this.start.point.x-this.end.point.x,e=this.start.point.y-this.end.point.y,i=Math.max(Math.abs(t),Math.abs(e)),n=document.createElement("canvas");return n.width=i,n.height=i,n}private getCurvePoints(){const t=this.start.point.x-this.end.point.x,e=this.start.point.y-this.end.point.y,i=Math.max(Math.abs(t),Math.abs(e));return[{x:this.start.point.x-t,y:this.start.point.y-e},{x:this.start.point.x-t/2,y:this.start.point.y-e/2},{x:this.start.point.x+t/2,y:this.start.point.y+e/2},{x:this.start.point.x,y:this.start.point.y}].map((t=>({x:t.x-Math.min(this.start.point.x-t,this.end.point.x-t),y:t.y-Math.min(this.start.point.y-t,this.end.point.y-t)})))}}class a{constructor(t,{minDistance:i=5,dotSize:n=0}={}){this._colors=[],this._strokes=new Map,this._handlePointerStart=t=>{t.preventDefault();const e=new Event("startStroke"),n="changedTouches"in t?t.changedTouches[0]:t,{x:o,y:s}=this._getPointRelativeTo(n),h=Date.now();this._strokeStartTime=h;const r=this._currentColor,a=this._currentThickness;this._strokes.set(h,{color:r,thickness:a,points:[{x:o,y:s,time:h}]}),this.canvas.dispatchEvent(e)},this._handlePointerMove=t=>{t.preventDefault();const i=new Event("strokeUpdate"),n="changedTouches"in t?t.changedTouches[0]:t,{x:o,y:s}=this._getPointRelativeTo(n),h=this._strokeStartTime;if(!h)return;const r=this._strokes.get(h);r&&(r.points.push({x:o,y:s,time:Date.now()}),this.canvas.dispatchEvent(i))},this._handlePointerEnd=t=>{t.preventDefault();const i=new Event("strokeEnd"),n="changedTouches"in t?t.changedTouches[0]:t,{x:o,y:s}=this._getPointRelativeTo(n),h=this._strokeStartTime;if(!h)return;const r=this._strokes.get(h);r&&(r.points.push({x:o,y:s,time:Date.now()}),this.canvas.dispatchEvent(i)),this._strokeStartTime=void 0},this.canvas="string"==typeof t?document.querySelector(t):t,this.minDistance=i,this.dotSize=n,this.canvas.style.touchAction="none",this._currentColor="#000",this._currentThickness=.5,this._strokeStartTime=void 0,this._strokes=new Map,this._resetBounds(),this._addEventListeners()}get strokes(){return this._strokes}set dotSize(t){this._dotSize=t}set minDistance(t){this._minDistance=t}set currentColor(t){this._currentColor=t}set currentThickness(t){this._currentThickness=t}clear(){const t=this.canvas.getContext("2d");t&&(t.clearRect(0,0,this.canvas.width,this.canvas.height),this._strokes=new Map)}toDataURL(t="image/png",e){return this.canvas.toDataURL(t,e)}fromDataURL(t){return new Promise(((e,i)=>{const n=new Image;n.onload=()=>{const t=s(this.canvas);t.drawImage(n,0,0),e()},n.onerror=t=>{i(t)},n.src=t}))}toData(){if(0===this._strokes.size)return[];const t=[];return this._strokes.forEach((e=>{if(e.points.length>0){const i=[];let n=e.points[0];i.push(n);for(let t=1;t<e.points.length;t++){const o=e.points[t],s=this._getDistance(o,n);s>this.minDistance&&(i.push(o),n=o)}i.length>=2&&t.push({color:e.color,thickness:e.thickness,points:i})}else e.points.length>0&&t.push({color:e.color,thickness:e.thickness,points:e.points})})),t}fromData(t){this.clear();const e=this.canvas.getContext("2d");if(!e)throw new Error("Cannot initialize context 2D");return t.forEach((t=>{const{color:i,thickness:n,points:o}=t;o.length>0&&(e.beginPath(),e.strokeStyle=i,e.lineWidth=n,e.lineCap="round",e.lineJoin="round",o.length>=2?(e.moveTo(o[0].x,o[0].y),o.forEach(((t,i)=>{const n=o[i-1];if(!n)return;const s=new r({point:n,time:n.time,color:i,thickness:n},t?{point:t,time:t.time,color:i,thickness:n}:void 0);s&&s.draw()}))):this.drawDot(o[0],n,i),e.closePath(),e.stroke())})),this}isEmpty(){return 0===this._strokes.size}fromPoint(t,e={}){const{color:i=this._currentColor,thickness:n=this._currentThickness}=e;this.drawDot(t,n,i)}drawDot(t,e,i){const n=this.canvas.getContext("2d");if(!n)throw new Error("Cannot initialize context 2D");n.beginPath(),n.fillStyle=i,n.arc(t.x,t.y,e/2,0,2*Math.PI),n.fill(),n.closePath()}_getPointRelativeTo(t){const{x:e,y:n}=((t,e)=>{const i=t.getBoundingClientRect();return{x:e.clientX-i.left,y:e.clientY-i.top}})(this.canvas,"changedTouches"in t?{clientX:t.clientX,clientY:t.clientY}:t);return{x:e,y:n}}_getDistance(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}_resetBounds(){this._minX=1/0,this._maxX=-1/0,this._minY=1/0,this._maxY=-1/0}_addEventListeners(){this.canvas.addEventListener("pointerdown",this._handlePointerStart),this.canvas.addEventListener("pointermove",this._handlePointerMove),this.canvas.addEventListener("pointerup",this._handlePointerEnd),this.canvas.addEventListener("pointerleave",this._handlePointerEnd)}}return a}));